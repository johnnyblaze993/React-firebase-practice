{"ast":null,"code":"var _jsxFileName = \"/Users/johnalvarez/Desktop/react project folder/React-firebase-practice/src/pages/Make-post/Form.jsx\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from '@mui/material';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  var _errors$title, _errors$description;\n  const schema = yup.object().shape({\n    title: yup.string().required('Title is required'),\n    description: yup.string().required('Description is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  //creates a reference so which collection we want to add the data to\n  const postsRef = collection(db, 'Posts');\n\n  //function to add data to the database\n  const onCreatePosts = async data => {\n    await addDoc(postsRef, data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onCreatePosts),\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      ...register('title')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      multiline: true,\n      rows: 4,\n      ...register('description')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        marginTop: '1rem'\n      },\n      variant: \"contained\",\n      fullWidth: true,\n      color: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Button","TextField","React","useForm","yup","yupResolver","addDoc","collection","db","Form","schema","object","shape","title","string","required","description","register","handleSubmit","formState","errors","resolver","postsRef","onCreatePosts","data","color","message","marginTop"],"sources":["/Users/johnalvarez/Desktop/react project folder/React-firebase-practice/src/pages/Make-post/Form.jsx"],"sourcesContent":["import { Button, TextField } from '@mui/material';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { addDoc, collection } from 'firebase/firestore';\nimport { db } from '../../firebase';\n\nconst Form = () => {\n  const schema = yup.object().shape({\n    title: yup.string().required('Title is required'),\n    description: yup.string().required('Description is required'),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  //creates a reference so which collection we want to add the data to\n  const postsRef = collection(db, 'Posts');\n\n  //function to add data to the database\n  const onCreatePosts = async (data) => {\n    await addDoc(postsRef, data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onCreatePosts)}>\n      <TextField\n        label=\"Title\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        {...register('title')}\n      />\n      <p\n        style={{\n          color: 'red',\n        }}\n      >\n        {errors.title?.message}\n      </p>\n      <TextField\n        label=\"Description\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        multiline\n        rows={4}\n        {...register('description')}\n      />\n      <p\n        style={{\n          color: 'red',\n        }}\n      >\n        {errors.description?.message}\n      </p>\n      <Button\n        sx={{\n          marginTop: '1rem',\n        }}\n        variant=\"contained\"\n        fullWidth\n        color=\"primary\"\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SAASC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AACvD,SAASC,EAAE,QAAQ,gBAAgB;AAAC;AAEpC,MAAMC,IAAI,GAAG,MAAM;EAAA;EAAA;EACjB,MAAMC,MAAM,GAAGN,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;IAChCC,KAAK,EAAET,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,mBAAmB,CAAC;IACjDC,WAAW,EAAEZ,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,yBAAyB;EAC9D,CAAC,CAAC;EAEF,MAAM;IACJE,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGjB,OAAO,CAAC;IACVkB,QAAQ,EAAEhB,WAAW,CAACK,MAAM;EAC9B,CAAC,CAAC;;EAEF;EACA,MAAMY,QAAQ,GAAGf,UAAU,CAACC,EAAE,EAAE,OAAO,CAAC;;EAExC;EACA,MAAMe,aAAa,GAAG,MAAOC,IAAI,IAAK;IACpC,MAAMlB,MAAM,CAACgB,QAAQ,EAAEE,IAAI,CAAC;EAC9B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEN,YAAY,CAACK,aAAa,CAAE;IAAA,wBAC1C,QAAC,SAAS;MACR,KAAK,EAAC,OAAO;MACb,OAAO,EAAC,UAAU;MAClB,SAAS;MACT,MAAM,EAAC,QAAQ;MAAA,GACXN,QAAQ,CAAC,OAAO;IAAC;MAAA;MAAA;MAAA;IAAA,QACrB,eACF;MACE,KAAK,EAAE;QACLQ,KAAK,EAAE;MACT,CAAE;MAAA,2BAEDL,MAAM,CAACP,KAAK,kDAAZ,cAAca;IAAO;MAAA;MAAA;MAAA;IAAA,QACpB,eACJ,QAAC,SAAS;MACR,KAAK,EAAC,aAAa;MACnB,OAAO,EAAC,UAAU;MAClB,SAAS;MACT,MAAM,EAAC,QAAQ;MACf,SAAS;MACT,IAAI,EAAE,CAAE;MAAA,GACJT,QAAQ,CAAC,aAAa;IAAC;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF;MACE,KAAK,EAAE;QACLQ,KAAK,EAAE;MACT,CAAE;MAAA,iCAEDL,MAAM,CAACJ,WAAW,wDAAlB,oBAAoBU;IAAO;MAAA;MAAA;MAAA;IAAA,QAC1B,eACJ,QAAC,MAAM;MACL,EAAE,EAAE;QACFC,SAAS,EAAE;MACb,CAAE;MACF,OAAO,EAAC,WAAW;MACnB,SAAS;MACT,KAAK,EAAC,SAAS;MACf,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,GAnEIlB,IAAI;EAAA,QAUJN,OAAO;AAAA;AAAA,KAVPM,IAAI;AAqEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}